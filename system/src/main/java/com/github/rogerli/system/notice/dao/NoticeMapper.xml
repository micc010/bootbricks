<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.rogerli.system.notice.dao.NoticeMapper">
    <resultMap id="BaseResultMap" type="com.github.rogerli.system.notice.entity.Notice">
        <id column="ID" property="id" jdbcType="BIGINT"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="MSG_TYPE" property="msgType" jdbcType="VARCHAR"/>
        <result column="MSG" property="message" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="NoticeResultMap" type="com.github.rogerli.system.notice.model.NoticeRowData" extends="BaseResultMap">
        <result column="LOGIN_ID" property="loginId" jdbcType="VARCHAR"/>
        <result column="ORGAN_ID" property="organId" jdbcType="VARCHAR"/>
        <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR"/>
        <result column="IS_READ" property="isRead" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID, CREATE_TIME, MSG_TYPE, MSG
    </sql>
    <sql id="Alias_Column_List">
        notice.ID, notice.CREATE_TIME, notice.MSG_TYPE, notice.MSG
    </sql>
    <sql id="User_Column_List">
        NOTICE_ID,MSG_TYPE,LOGIN_ID,ORGAN_ID,ROLE_ID,IS_READ
    </sql>
    <!--插入消息与用户多对多关联表-->
    <insert id="insertNoticeUser" parameterType="com.github.rogerli.system.notice.entity.NoticeUser">
        insert into sys_notice_user (<include refid="User_Column_List"/>)
        values (#{noticeId,jdbcType=VARCHAR}, #{msgType,jdbcType=VARCHAR},
        #{loginId,jdbcType=VARCHAR}, #{organId,jdbcType=VARCHAR},
        #{roleId,jdbcType=VARCHAR}, #{isRead,jdbcType=TINYINT})
    </insert>
    <!--删除消息与用户多对多关联表-->
    <delete id="deleteNoticeUser" parameterType="com.github.rogerli.system.notice.entity.NoticeUser">
        delete from sys_notice_user
        where NOTICE_ID = #{noticeId,jdbcType=VARCHAR}
        and LOGIN_ID = #{loginId,jdbcType=VARCHAR}
        and MSG_TYPE = #{msgType,jdbcType=VARCHAR}
    </delete>
    <!--根据消息ID删除关联-->
    <delete id="deleteNoticeUserByKey" parameterType="string">
        delete from sys_notice_user
        where NOTICE_ID = #{id,jdbcType=VARCHAR}
    </delete>
    <!--根据用户等条件查询消息-->
    <select id="findByQuery" resultMap="NoticeResultMap"
            parameterType="com.github.rogerli.system.notice.model.NoticeQuery">
        select
        <include refid="Alias_Column_List"/>,rel.LOGIN_ID,rel.ORGAN_ID,rel.ROLE_ID,rel.IS_READ
        from sys_notice notice
        left join sys_notice_user rel
        on notice.ID = rel.NOTICE_ID
        <trim prefix="where" prefixOverrides="and|or">
            <if test="loginId != null">
                and rel.LOGIN_ID = #{loginId,jdbcType=VARCHAR}
            </if>
            <if test="msgType != null">
                and notice.MSG_TYPE = #{msgType,jdbcType=VARCHAR}
            </if>
            <if test="isRead != null">
                and rel.IS_READ = #{isRead,jdbcType=TINYINT}
            </if>
        </trim>
    </select>
</mapper>